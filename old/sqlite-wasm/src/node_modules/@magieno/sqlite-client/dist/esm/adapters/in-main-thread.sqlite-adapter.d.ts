import { Database, Sqlite3Static } from "@sqlite.org/sqlite-wasm";
import { SqliteAdapterInterface } from "../interfaces/sqlite-adapter.interface";
import { ReturnValueEnum } from "../enums/return-value.enum";
import { RowModeEnum } from "../enums/row-mode.enum";
import { MemoryMainThreadSqliteOptionsInterface } from "../interfaces/memory-main-thread-sqlite-options.interface";
export declare class InMainThreadSqliteAdapter implements SqliteAdapterInterface {
    private readonly options;
    protected filename: string;
    protected flags: string;
    protected sqlite3: Sqlite3Static | void;
    protected db: Database;
    constructor(options: MemoryMainThreadSqliteOptionsInterface);
    getDB(): Database | undefined;
    init(): Promise<any>;
    executeSql(sqlStatement: string, bindParameters?: (string | number)[], returnValue?: ReturnValueEnum, rowMode?: RowModeEnum | number): Promise<any>;
}
