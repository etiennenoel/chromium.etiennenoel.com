import { SqliteClientOptions } from "./types/sqlite-client.options";
import { SqliteAdapterInterface } from "./interfaces/sqlite-adapter.interface";
import { ReturnValueEnum } from "./enums/return-value.enum";
import { RowModeEnum } from "./enums/row-mode.enum";
export * from "./adapters/adapters";
export * from "./enums/enums";
export * from "./interfaces/interfaces";
export * from "./messages/messages";
export * from "./proxies/proxies";
export * from "./types/types";
export * from "./sqlite-client-extension";
export declare class SqliteClient {
    private readonly options;
    readonly adapter: SqliteAdapterInterface;
    constructor(options: SqliteClientOptions);
    init(): Promise<any>;
    executeSql(sqlStatement: string, bindParameters?: (string | number)[], returnValue?: ReturnValueEnum, rowMode?: RowModeEnum | number): Promise<any>;
}
